version: "3.1"

x-tirelire-common:
  environment:
    &tirelire-common-env
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: psswd1234
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      BROKER_HOST: broker
      BROKER_PORT: "6379"
      BROKER_PASSWORD: "MyRedisPassword"

services:
  account-api:
    build: 
      context: ./tirelire-account
    environment: 
      <<: *tirelire-common-env
      POSTGRES_DB: "tirelire_account"
    ports:
      - "8010:8000"
    command: [
      "uvicorn", "app.entrypoints.api.client:create_app", "--workers", "1", "--host", "0.0.0.0", "--port", "8000", "--reload", "--factory"
      ]
    volumes:
      - "./tirelire-account/app:/app"
    depends_on:
      - postgres
      - broker
  user-api:
    build: 
      context: ./tirelire-user
    environment: 
      <<: *tirelire-common-env
      POSTGRES_DB: "tirelire_user"
    ports:
      - "8020:8000"
    command: [
      "uvicorn", "app.entrypoints.api.client:create_app", "--workers", "1", "--host", "0.0.0.0", "--port", "8000", "--reload", "--factory"
      ]
    volumes:
      - "./tirelire-user/app:/app"
    depends_on:
      - postgres
      - broker
  auth-api:
    build:
      context: ./tirelire-auth
    environment: 
      <<: *tirelire-common-env
      POSTGRES_DB: "tirelire_auth"
    ports:
      - "8030:8000"
    command: [
      "uvicorn", "app.entrypoints.api.client:create_app", "--workers", "1", "--host", "0.0.0.0", "--port", "8000", "--reload", "--factory"
      ]
    volumes:
      - "./tirelire-auth/app:/app"
    depends_on:
      - postgres
      - broker
  auth-event-listener:
    build:
      context: ./tirelire-auth
    environment: 
      <<: *tirelire-common-env
      POSTGRES_DB: "tirelire_auth"
    command: [
      "python", "-m", "app.entrypoints.event_listener.redis_event_listener"
      ]
    volumes:
      - "./tirelire-auth/app:/app"
    depends_on:
      - postgres
      - broker
  account-event-listener:
    build: 
      context: ./tirelire-account
    environment: 
      <<: *tirelire-common-env
      POSTGRES_DB: "tirelire_account"

    command: [
      "python", "-m", "app.entrypoints.event_listener.redis_event_listener"
      ]
    volumes:
      - "./tirelire-account/app:/app"
    depends_on:
      - postgres
      - broker
  backend:
    build:
      context: ./tirelire-web-backend
    environment: 
      <<: *tirelire-common-env
      AUTH_SERVICE_URL: http://auth-api:8000
      USER_SERVICE_URL: http://user-api:8000
      SESSION_MANAGER_HOST: session-manager
      SESSION_MANAGER_PORT: "6379"
      SESSION_MANAGER_PASSWORD: "MyRedisPassword"
    ports:
      - "8000:8000"
    volumes:
      - "./tirelire-web-backend/app:/app"
    depends_on:
      - session-manager
      - auth-api
      - account-api
      - user-api
    command: [
      "uvicorn", "app.entrypoints.api.client:create_app", "--workers", "1", "--host", "0.0.0.0", "--port", "8000", "--reload", "--factory"
      ]
  frontend:
    build: 
      context: ./tirelire-web-frontend
    environment:
      BACKEND_URL: http://backend:8000
    depends_on:
      - backend
  nginx:
    image: nginx:latest
    restart: always
    environment:
      NGINX_HOST: localhost
      NGINX_PORT_HTTP: 80
      NGINX_PROXY_TIMEOUT: 180
      FRONTEND_URL: 'frontend'
      FRONTEND_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
    depends_on:
      - frontend
  postgres:
    image: postgres:9.6
    env_file: 
      - dev-database.conf
    volumes:
        - ./docker/docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
  broker:
    image: redis:alpine
    environment:
      REDIS_REPLICATION_MODE: "master"
    command: [
      "redis-server", "--requirepass", "MyRedisPassword"
      ]
  session-manager:
    image: redis:alpine
    environment:
      REDIS_REPLICATION_MODE: "master"
    command: [
      "redis-server", "--requirepass", "MyRedisPassword"
      ]
